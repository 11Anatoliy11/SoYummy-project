{"version":3,"file":"static/js/932.99faa275.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.12\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.12\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.12 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","processStep","stepId","processFrame","requestAnimationFrame","frame","keepAlive","immediate","cancelFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_get","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}