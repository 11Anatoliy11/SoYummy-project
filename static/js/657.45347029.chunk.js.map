{"version":3,"file":"static/js/657.45347029.chunk.js","mappings":"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","sources":["components/Signin/Signin.styled.jsx","components/Signin/Signin.jsx","pages/SigninPage/SigninPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  `\n    export const Input = styled.input`\n      width: 100%;\n      background-color: #2A2C36;\n      border-radius: 6px;\n      padding: 12px 4px 12px 40px;\n      font-family: 'Poppins';\n      font-style: normal;\n      font-weight: 400;\n      font-size: 14px;\n      letter-spacing: 0.04em;\n      color: var(--white-color);\n      margin-bottom: ${({ touch, err }) => {\n\n    return touch && err ? '4px' : '24px'\n  }};\n      border: ${(props) => (props.success ? '1px solid var(--ocean-green-color)' : props.err ? '1px solid var(--cinnabar-color)' : '1px solid rgba(146,147,153,0.8)')};\n      &::placeholder {\n        font-family: 'Poppins';\n        font-style: normal;\n        font-weight: 400;\n        font-size: 14px;\n        line-height: 16px;\n        letter-spacing: 0.04em;\n        color: rgba(146,147,153,0.8);\n        \n      }\n      &:focus{\n        border: ${(props) => (props.success ? '1px solid var(--ocean-green-color)' : props.err ? '1px solid var(--cinnabar-color)' : '1.2px solid var(--white-color)')};\n        outline: none;\n\n        &::placeholder{\n          color:var(--white-color);\n        }\n      }\n\n      @media screen and (min-width: 767.98px) {\n        padding: 16px 8px 16px 50px;\n    \n      }\n`;\n\nexport const FormContainer = styled.div`\n  width: 290px;\n  padding: 32px 28px;\n  box-shadow: 0px 4px 48px rgba(0, 0, 0, 0.1);\n  border-radius: 30px;\n  background-color: var(--charade-color);\n  display: inline-block;\n\n\n  @media screen and (min-width: 767.98px) {\n    width: 500px;\n    padding: 44px 50px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-family: 'poppins';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 24px;\n  letter-spacing: -0.02;\n  line-height: calc(30 / 28);\n  color: var(--background-color);\n  margin-bottom: 32px;\n  text-align: ${props => (props.google ? 'center' : null)};\n\n  @media screen and (min-width: 767.98px) {\n    font-size: 28px;\n    margin-bottom: 16px;\n  }\n`;\nexport const Icon = styled.div`\n  display: inline-flex;\n  position: absolute;\n  top:20%;\n  left:18px;\n`\nexport const IconAft = styled.div`\n  display: inline-flex;\n  position: absolute;\n  top:20%;\n  right:18px;\n`\nexport const StyledLink = styled(Link)`\n  background-color: var(--white-lila-color);\n  border-radius: 26px;\n  padding: 10px 19px;\n  text-decoration: none;\n  color: black;\n  display: flex;\n  align-items: center;\n  width: 120px;\n  margin: 0px auto 23px auto;\n  transition: transform 250ms ease;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  border: none;\n  padding: 15px 16px;\n  border-radius: 6px;\n  width: 100%;\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 18px;\n  background-color: var(--green-color);\n  color: var(--background-color);\n  margin-top: 25px;\n  /* margin-right: ${props => (props.login ? '15px' : 0)}; */\n  transition: transform 250ms ease;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Error = styled.div`\n  color: var(--cinnabar-color);\n  font-family: 'Poppins';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 10px;\n  line-height: 12px;\n  margin-bottom: 10px;\n`;\n","import { useFormik } from 'formik';\nimport { login } from 'redux/auth/auth-operations'\nimport { useDispatch } from 'react-redux';\nimport { useRef, useState } from 'react';\nimport schemaSignIn from '../utils/schemaSignIn';\nimport { ReactComponent as Lock } from '../../images/svg/reg-password.svg';\nimport { ReactComponent as Email } from '../../images/svg/reg-email.svg';\nimport { ReactComponent as ErrorLogo } from '../../images/svg/Error-logo.svg';\nimport { ReactComponent as SuccessLogo } from '../../images/svg/Success.svg';\nimport {\n  Form,\n  FormContainer,\n  Text,\n  Button,\n  Error,\n  Icon,\n  Input,\n  IconAft,\n} from './Signin.styled';\n\n\nconst initState = {\n  email: '',\n  password: '',\n};\nconst colors = {\n  primary: 'rgba(146,147,153,0.8)',\n  warning: 'var(--saffron-color)',\n  error: 'var(--cinnabar-color)',\n  success: 'var(--ocean-green-color)',\n  accent: 'var(--white-color)'\n}\n\n\nconst emailRegexp = /^[A-Za-z0-9][A-Za-z0-9._%+-]*@[A-Za-z0-9]{1,5}\\.[A-Za-z]{1,}$/;\n\nconst passwordRegexp = /^[A-Za-z0-9]|[A-Z]|[a-z]$/;;\n\nexport const Signin = () => {\n  const dispatch = useDispatch();\n  const [focused, setFocused] = useState(null);\n  const [successEmail, setSuccessEmail] = useState(null);\n  const [successPass, setSuccessPass] = useState(null);\n\n  const currEl = useRef(null);\n\n  // QUESTION about re-render , cause set funcs dont set to NULL\n  if (currEl.current !== document.activeElement.name) {\n\n    currEl.current = document.activeElement.name;\n    setSuccessEmail(null);\n    setSuccessPass(null);\n\n  }\n\n  const onFocus = (e) => {\n    setFocused(e.target.name);\n  }\n  const onBlur = (e) => setFocused(null);\n\n  const formik = useFormik({\n    initialValues: initState,\n    validationSchema: schemaSignIn,\n    validateOnChange: true,\n    onSubmit: (values, actions) => {\n      dispatch(login({ ...values }));\n      actions.resetForm();\n      setSuccessEmail(null);\n      setSuccessPass(null);\n\n    }\n\n  })\n\n  const { handleChange, handleSubmit, errors, touched } = formik;\n  const { email, password } = formik.values;\n\n  const handleOnChange = (e) => {\n    handleChange(e);\n    if (email.match(emailRegexp)) {\n      setSuccessEmail(true);\n    } else {\n      setSuccessEmail(false);\n    }\n    if (password.match(passwordRegexp)) {\n      setSuccessPass(true);\n\n    } else {\n      setSuccessPass(false);\n    }\n  }\n\n  return (\n    <FormContainer>\n      <Text>Sign In</Text>\n      <Form onSubmit={handleSubmit} autoComplete='off'>\n        <div style={{ position: \"relative\" }}>\n          <Icon>\n            <Email style={{\n              stroke: `${successEmail && focused === \"email\" ?\n                colors.success :\n                errors.email && touched.email ?\n                  colors.error :\n                  focused === \"email\" ?\n                    colors.accent :\n                    colors.primary}`\n            }} />\n          </Icon>\n          <Input\n            name='email'\n            type=\"text\"\n            value={email}\n            onChange={handleOnChange}\n            placeholder=\"Email\"\n            err={errors?.email && touched.email}\n            touch={touched?.email}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            success={successEmail && focused === \"email\"}\n          />\n          {focused === \"email\" && successEmail && <IconAft><SuccessLogo /></IconAft>}\n          {errors?.email && touched.email && <IconAft><ErrorLogo /></IconAft>}\n          {errors?.email && touched?.email && <Error>{errors.email}</Error>}\n        </div>\n        <div style={{ position: \"relative\" }}>\n          <Icon>\n            <Lock style={{\n              stroke: `${successPass && focused === \"password\" ?\n                colors.success :\n                errors?.password && touched?.password ?\n                  colors.error :\n                  focused === \"password\" ?\n                    colors.accent :\n                    colors.primary}`\n            }} />\n          </Icon>\n          <Input\n            name='password'\n            type=\"password\"\n            value={password}\n            onChange={handleOnChange}\n            placeholder=\"Password\"\n            err={errors?.password && touched?.password}\n            touch={touched?.password}\n            success={successPass && focused === \"password\"}\n            onFocus={onFocus}\n            onBlur={onBlur}\n\n          />\n          {focused === \"password\" && successPass && <IconAft><SuccessLogo /></IconAft>}\n          {errors?.password && touched.password && <IconAft><ErrorLogo /></IconAft>}\n          {errors?.password && touched?.password && <Error>{errors.password}</Error>}\n        </div>\n\n        <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n          <Button type=\"submit\" >\n            Sign In\n          </Button>\n        </div>\n      </Form>\n    </FormContainer>\n  );\n\n};\n","import { Signin } from 'components/Signin/Signin';\nimport { ReactComponent as OrderPanaDesk } from '../../images/svg/Order-panaDesk.svg';\nimport { ReactComponent as OrderPanaMob } from '../../images/svg/Order-panaMob.svg';\nimport { useWindowSize } from 'react-use';\nimport { FormWrapper, StyledLink, StyledRect, Wrapper } from '../RegisterPage/RegisterPage.styled';\n\n\n\nconst SigninPage = () => {\n  const { width } = useWindowSize();\n  return (\n    <StyledRect>\n    <Wrapper signin={true}>\n      {width >= 1200 && <OrderPanaDesk width='562px' height='498px' />}\n      {width<= 767.99 && <OrderPanaMob width='285px' height='250px' />}\n      {width>= 767.99 && width <= 1199.98 && <OrderPanaMob width='409px' height='359px' />}\n      <FormWrapper>\n        <Signin/>\n        <StyledLink to='/register'>Register</StyledLink>\n      </FormWrapper>\n    </Wrapper>\n  </StyledRect>\n    );\n};\n\nexport default SigninPage;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","_ref","touch","err","props","success","FormContainer","_templateObject3","Text","_templateObject4","google","Icon","_templateObject5","IconAft","_templateObject6","Button","Link","_templateObject7","_templateObject8","login","Error","_templateObject9","initState","email","password","colors","emailRegexp","passwordRegexp","Signin","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","focused","setFocused","_useState3","_useState4","successEmail","setSuccessEmail","_useState5","_useState6","successPass","setSuccessPass","currEl","useRef","current","document","activeElement","name","onFocus","e","target","onBlur","formik","useFormik","initialValues","validationSchema","schemaSignIn","validateOnChange","onSubmit","values","actions","_objectSpread","resetForm","handleChange","handleSubmit","errors","touched","_formik$values","handleOnChange","match","_jsxs","children","_jsx","autoComplete","style","position","Email","stroke","concat","type","value","onChange","placeholder","SuccessLogo","ErrorLogo","Lock","display","alignItems","justifyContent","width","useWindowSize","StyledRect","Wrapper","signin","OrderPanaDesk","height","OrderPanaMob","FormWrapper","StyledLink","to"],"sourceRoot":""}